from string import Template


#### BIG BENCH HARD ####

# meta prompt templates:
rephrase_template = Template("You are given task information and a prompt for that specific task. Please rephrase the given prompt. The given prompt contains keywords delimited by { and }, you must use those keywords in your output to ensure compatibility.\n\n'''$task_information'''\n\nThe format of your answer should be:\nPrompt:\n<the prompt>")
rephrase_to_GPT3_template = Template("You are given task information and a prompt for that specific task. Rephrase the given prompt so it would work better for GPT-3. The given prompt contains keywords delimited by { and }, you must use those keywords in your output to ensure compatibility.\n\n'''$task_information'''\n\nThe format of your answer should be:\nPrompt:\n<the prompt>")
meta_cot_template = Template("Your task is to augment a given instruction describing a task into as many variants as possible, aiming at approximating many ways to explain the task to a model.\nYour input is called INPUT_INSTRUCTION_TEMPLATE. It contains an instruction template for a language model, aimed at solving a given task. The input contains keywords delimited by { and }, those are placeholders that will be filled with the specific task instance using python's string format() function. You must always use those keywords in all of your outputs to ensure compatibility, you must never change the keywords, or add other keywords delimited by {,}. Those keywords are input placeholders and are not an explicit part of the task explanation.\nYou will be also provided with EXTRA_INFO. This may contain an additional explanation of the task, as well as a concrete example with the placeholder keywords being filled with a specific input sample of the task.\nYou may also be provided with LANGAUGE_STYLE that contains a description of specific language style.\nYour output should contain as many variants as possible that tell the same INPUT_INSTRUCTIONS in a different way, aiming to represent all plausible human ways of writing these INPUT_INSTRUCTIONS. The new variants in your output should change in structure and style. If you are provided with LANGUAGE_STYLE, all the new variants must follow the given language style. You may add all text you may find necessary to provide as many variants of the same input.\nYou should also output an explanation of the task, making sure to use all the information in EXTRA_INFO and INPUT_INSTRUCTION_TEMPLATE to understand the task and write the correct instruction variants.\n\nHere's what you should do step-by-step:\n(1)Understand the described task, using both INPUT_INSTRUCTION_TEMPLATE and the meta-data provided by EXTRA_INFO. If EXTRA_INFO contains an example, derive the necessary information from it. Specifically, understand the keywords' role in the task and how to describe them, and use EXTRA_INFO to derive task-specific info missing in INPUT_INSTRUCTION_TEMPLATE.\n(2)Think about how different people would formalize the task to a language model. Make sure to include all the keywords mentioned in INPUT_INSTRUCTION_TEMPLATE. Remember that the keywords are input placeholders that will be filled with specific input data using the format() method.\n(3)Structure an instruction variant based on each person. All the keywords delimited by {,} in INPUT_INSTRUCTIONS_TEMPLATE MUST be used in each variant. Iterate over all keywords delimited by {,} in INPUT_INSTRUCTIONS and make sure that they are present in all your variants. If LANGUAGE_STYLE is provided, the instruction variants must follow the specified language style.\n(4)Output all final variants in the following JSON_OUTPUT format: {'task_explanation': <string: an explanation of the task and each of the keywords>, 'variants': <list of strings: the list of your variants (each variant is a string)>}.\n\nPerform your task on the following:\nINPUT_INSTRUCTION_TEMPLATE:\n'''$prompt_templates'''\n\nEXTRA_INFO:\n'''$hint'''\n\nJSON_OUTPUT:")
meta_desc_1_template = Template('Can you help me write a prompt to GPT-3 for the following task description delimited by $$?\n$$ $task_description $$\nThe prompt should be general. Add an example input and example output to your prompt.\nThe format of your answer should be:\nPrompt:\n<the prompt>\nExample input:\n<example input>\nExample output:\n<example output>')
meta_desc_2_template = Template('Given a task description delimited by $$, you must output a prompt for that task. The prompt must be generic, include few shot examples, and lead to the best performance when used with gpt 3.\nThe format of your answer should be:\nPrompt:\n<the prompt>\nExample input:\n<example input>\nExample output:\n<example output>\n\n$$ $task_description $$')

# get task description prompt template:
get_task_description_template = Template("""You are given task information and a few input-output samples to the task accompanied by an explanation. Explain and derive the task instruction. Start your explanation with "The task is". Your explanation should be very short (up to 50 words).\n\nTask information: '''$task_information'''\n\nInput-output samples accompanied by an explanation:\ninput1:\n'''$input1'''\n\ninput2:\n'''$input2'''\n\ninput3:\n'''$input3'''""")